generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Usuario {
//   id         Int          @id @default(autoincrement())
//   nome       String
//   senha      String
//   etapas     Etapa[]
//   etapaOrdem EtapaOrdem[]
// }


// model ProdutoFinal {
//   id             Int            @id @default(autoincrement())
//   descricao      String
 sku                String
   sku        String
     unidade_medida     String
//   categoriaId    Int
//   etapa          Etapa[]
//   loteProdutos   LoteProduto[]
//   materiaPrima   MateriaPrima[]
//   ordens         Ordem[]
//   categoria      Categoria      @relation(fields: [categoriaId], references: [id])
// }

// model MateriaPrima {
//   id             Int           @id @default(autoincrement())
//   descricao      String
  unidade_medida String
//   imagem         String?
//   categoriaId    Int
//   produtoFinalId Int
//   loteMateria    LoteMateria[]
//   categoria      Categoria     @relation(fields: [categoriaId], references: [id])
//   produtoFinal   ProdutoFinal  @relation(fields: [produtoFinalId], references: [id])
// }





// model Categoria {
//   id           Int            @id @default(autoincrement())
//   descricao    String
//   materiaPrima MateriaPrima[]
//   produto      ProdutoFinal[]
// }

// model LoteMateria {
//   id                 Int          @id @default(autoincrement())
//    preco_custo        Float
//   quantidade_inicial Float
//   quantidade_atual   Float
//   data_entrada       DateTime     @default(now()) @db.Timestamp(6)
//   fornecedor         String
//   materiaPrimaId     Int
//   localId            Int
//   ordens             Ordem[]
//   local              Local        @relation(fields: [localId], references: [id])
//   materiaPrima       MateriaPrima @relation(fields: [materiaPrimaId], references: [id])
// }
// model LoteProduto {
//   id         Int          @id @default(autoincrement())
//   quantidade Int
//   imagem     String?
//   produtoId  Int
//   localId    Int
//   ordemId    Int
//   local      Local        @relation(fields: [localId], references: [id])
//   Ordem      Ordem        @relation(fields: [ordemId], references: [id])
//   produto    ProdutoFinal @relation(fields: [produtoId], references: [id])
// }



// model Local {
//   id          Int           @id @default(autoincrement())
//   descricao   String
//   loteMateria LoteMateria[]
//   loteProduto LoteProduto[]
// }


// model Ordem {
//   id                  Int           @id @default(autoincrement())
//   numero              Int
//   data_ordem          DateTime      @default(now()) @db.Timestamp(6)
//   quantidade_esperada Int
//   status              String
//   produtoFinalId      Int
//   loteMateriaId       Int
//   etapaOrdem          EtapaOrdem[]
//   LoteProduto         LoteProduto[]
//   loteMateria         LoteMateria   @relation(fields: [loteMateriaId], references: [id])
//   produtoFinal        ProdutoFinal  @relation(fields: [produtoFinalId], references: [id])
// }

// model Etapa {
//   id         Int          @id @default(autoincrement())
//   descricao  String
//   produtoId  Int
//   usuarioId  Int?
//   produto    ProdutoFinal @relation(fields: [produtoId], references: [id])
//   Usuario    Usuario?     @relation(fields: [usuarioId], references: [id])
//   etapaOrdem EtapaOrdem[]
// }

model EtapaOrdem {
  id                 Int          @id @default(autoincrement())
  status             String
  quantidade_inicial Float
  quantidade_final   Float
  ordemId            Int
  etapaId            Int
  usuarioId          Int
  etapa              Etapa        @relation(fields: [etapaId], references: [id])
  ordem              Ordem        @relation(fields: [ordemId], references: [id])
  usuario            Usuario      @relation(fields: [usuarioId], references: [id])
  ocorrencias        Ocorrencia[]
}

// model Ocorrencia {
//   id              Int        @id @default(autoincrement())
//   titulo          String
//   texto           String
//   data_ocorrencia DateTime   @default(now()) @db.Timestamp(6)
//   imagem          String?
//   etapaOrdemId    Int
//   etapaOrdem      EtapaOrdem @relation(fields: [etapaOrdemId], references: [id])
// }

